def generate_magic_square(n):
    """Generate a magic square of size n x n using Siamese method"""
    magic_square = [[0] * n for _ in range(n)]
    
    # Initialize position for 1
    i, j = 0, n // 2
    
    for num in range(1, n * n + 1):
        magic_square[i][j] = num
        
        # Calculate next position
        new_i, new_j = (i - 1) % n, (j + 1) % n
        
        # If cell is already filled, move down
        if magic_square[new_i][new_j]:
            i = (i + 1) % n
        else:
            i, j = new_i, new_j
    
    return magic_square

def print_magic_square(square):
    """Print the magic square with formatting"""
    n = len(square)
    print(f"\n{n}x{n} Magic Square (Magic Constant = {n*(n*n+1)//2}):\n")
    for row in square:
        print(" ".join(f"{num:3d}" for num in row))

def main():
    print("Magic Square Generator")
    print("Creates odd-sized magic squares where all rows, columns and diagonals sum to the same value")
    
    while True:
        try:
            size = int(input("\nEnter an odd number (3 or greater): "))
            if size < 3:
                print("Please enter 3 or greater")
                continue
            if size % 2 == 0:
                print("Please enter an odd number")
                continue
            break
        except ValueError:
            print("Please enter a valid number")
    
    magic_sq = generate_magic_square(size)
    print_magic_square(magic_sq)

if __name__ == "__main__":
    main()